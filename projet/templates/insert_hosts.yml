# insert_hosts.yml
- name: Verification de l existance des hotes dans Zabbix
  community.mysql.mysql_query:
    login_user: zabbix
    login_password: 3969
    login_db: zabbix
    login_host: mysql-server
    query: "SELECT interfaceid FROM interface WHERE ip = '{{ item[1] }}';" #verifie si l'hote existe en fonction de l'IP
  register: existing_host

- name:
  debug:
    var: existing_host


- name: Recuperation de l hostid
  community.mysql.mysql_query:
    login_user: zabbix
    login_password: 3969
    login_db: zabbix
    login_host: mysql-server
    query: "SELECT MAX(hostid) + 1 AS next_hostid FROM hosts;" # Recupere le dernier ID + 1
  register: next_hostid
  when: existing_host.rowcount[0] == 0  # Ex  cute uniquement si l'h  te n'existe pas

- name: Insertion des hotes dans la table host de zabbix
  community.mysql.mysql_query:
    login_user: zabbix
    login_password: 3969
    login_db: zabbix
    login_host: mysql-server
    query: "INSERT INTO hosts (hostid, host, name, status, description) VALUES ('{{ next_hostid.query_result[0][0].next>
  when: existing_host.rowcount[0] == 0  # Ex  cute uniquement si l'h  te n'existe pas

- name: Recuperation de l interfaceid
  community.mysql.mysql_query:
    login_user: zabbix
    login_password: 3969
    login_db: zabbix
    login_host: mysql-server
    query: "SELECT MAX(interfaceid) + 1 AS next_interfaceid FROM interface;"
  register: next_interfaceid
  when: existing_host.rowcount[0] == 0  # Ex  cute uniquement si l'h  te n'existe pas

- name: Insertion des donnees dans la table interface
  community.mysql.mysql_query:
    login_user: zabbix
    login_password: 3969
    login_db: zabbix
    login_host: mysql-server
    query: "INSERT INTO interface (interfaceid, hostid, main, type, useip, ip, dns, port) VALUES ('{{ next_interfaceid.>
  when: existing_host.rowcount[0] == 0  # Ex  cute uniquement si l'h  te n'existe pas

